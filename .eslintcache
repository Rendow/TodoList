[{"C:\\Project\\TodoList\\src\\reportWebVitals.ts":"1","C:\\Project\\TodoList\\src\\app\\store.ts":"2","C:\\Project\\TodoList\\src\\app\\App.tsx":"3","C:\\Project\\TodoList\\src\\index.tsx":"4","C:\\Project\\TodoList\\src\\features\\TodolistsList\\todolists-reducer.ts":"5","C:\\Project\\TodoList\\src\\features\\TodolistsList\\tasks-reducer.ts":"6","C:\\Project\\TodoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"7","C:\\Project\\TodoList\\src\\components\\EditableSpan\\EditableSpan.tsx":"8","C:\\Project\\TodoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"9","C:\\Project\\TodoList\\src\\features\\TodolistsList\\TodolistsList.tsx":"10","C:\\Project\\TodoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"11","C:\\Project\\TodoList\\src\\components\\AddItemForm\\AddItemForm.tsx":"12","C:\\Project\\TodoList\\src\\features\\Login\\Login.tsx":"13","C:\\Project\\TodoList\\src\\api\\todolists-api.ts":"14","C:\\Project\\TodoList\\src\\app\\app-reducer.ts":"15","C:\\Project\\TodoList\\src\\features\\Login\\auth-reducer.ts":"16","C:\\Project\\TodoList\\src\\stories\\Page.stories.tsx":"17","C:\\Project\\TodoList\\src\\stories\\AddItemForm.stories.tsx":"18","C:\\Project\\TodoList\\src\\stories\\Header.stories.tsx":"19","C:\\Project\\TodoList\\src\\stories\\Header.tsx":"20","C:\\Project\\TodoList\\src\\utils\\error-utils.ts":"21","C:\\Project\\TodoList\\src\\stories\\Button.stories.tsx":"22","C:\\Project\\TodoList\\src\\stories\\Task.stories.tsx":"23","C:\\Project\\TodoList\\src\\stories\\todolists-api.stories.tsx":"24","C:\\Project\\TodoList\\src\\stories\\Button.tsx":"25","C:\\Project\\TodoList\\src\\stories\\decorators\\ReduxStoreProviderDecorator.tsx":"26","C:\\Project\\TodoList\\src\\stories\\EditableSpan.stories.tsx":"27","C:\\Project\\TodoList\\src\\stories\\AppWithRedux.stories.tsx":"28"},{"size":425,"mtime":1607869388000,"results":"29","hashOfConfig":"30"},{"size":1181,"mtime":1621541583042,"results":"31","hashOfConfig":"32"},{"size":2583,"mtime":1621548709804,"results":"33","hashOfConfig":"30"},{"size":744,"mtime":1621525229134,"results":"34","hashOfConfig":"30"},{"size":4585,"mtime":1597327450000,"results":"35","hashOfConfig":"32"},{"size":5633,"mtime":1596722126000,"results":"36","hashOfConfig":"32"},{"size":4193,"mtime":1596715250000,"results":"37","hashOfConfig":"32"},{"size":959,"mtime":1621636816519,"results":"38","hashOfConfig":"32"},{"size":1027,"mtime":1620925691983,"results":"39","hashOfConfig":"30"},{"size":4021,"mtime":1621545469305,"results":"40","hashOfConfig":"32"},{"size":1773,"mtime":1596295538000,"results":"41","hashOfConfig":"30"},{"size":1595,"mtime":1596715562000,"results":"42","hashOfConfig":"32"},{"size":3911,"mtime":1621543409599,"results":"43","hashOfConfig":"32"},{"size":3088,"mtime":1621548551275,"results":"44","hashOfConfig":"30"},{"size":2044,"mtime":1621548195630,"results":"45","hashOfConfig":"32"},{"size":1964,"mtime":1621548642401,"results":"46","hashOfConfig":"30"},{"size":509,"mtime":1621634345350,"results":"47","hashOfConfig":"32"},{"size":629,"mtime":1614360854000,"results":"48","hashOfConfig":"32"},{"size":414,"mtime":1621634345350,"results":"49","hashOfConfig":"32"},{"size":1356,"mtime":1621634345350,"results":"50","hashOfConfig":"32"},{"size":811,"mtime":1596719330000,"results":"51","hashOfConfig":"32"},{"size":708,"mtime":1621634345350,"results":"52","hashOfConfig":"32"},{"size":1503,"mtime":1614360854000,"results":"53","hashOfConfig":"32"},{"size":6267,"mtime":1621636816512,"results":"54","hashOfConfig":"32"},{"size":941,"mtime":1621634345350,"results":"55","hashOfConfig":"32"},{"size":340,"mtime":1614360854000,"results":"56","hashOfConfig":"32"},{"size":788,"mtime":1621636999152,"results":"57","hashOfConfig":"32"},{"size":486,"mtime":1621637413645,"results":"58","hashOfConfig":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r77foy",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"7uuzvu",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Project\\TodoList\\src\\reportWebVitals.ts",[],"C:\\Project\\TodoList\\src\\app\\store.ts",[],["121","122"],"C:\\Project\\TodoList\\src\\app\\App.tsx",["123"],"C:\\Project\\TodoList\\src\\index.tsx",[],"C:\\Project\\TodoList\\src\\features\\TodolistsList\\todolists-reducer.ts",["124"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n","C:\\Project\\TodoList\\src\\features\\TodolistsList\\tasks-reducer.ts",["125","126"],"C:\\Project\\TodoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["127","128","129","130","131","132"],"C:\\Project\\TodoList\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\Project\\TodoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",["133"],"C:\\Project\\TodoList\\src\\features\\TodolistsList\\TodolistsList.tsx",["134","135","136","137","138","139","140","141"],"C:\\Project\\TodoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["142","143","144"],"C:\\Project\\TodoList\\src\\components\\AddItemForm\\AddItemForm.tsx",["145","146","147"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\Project\\TodoList\\src\\features\\Login\\Login.tsx",["148"],"import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"./auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppRootStateType>(state => state.auth.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Must be 3 characters or more';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    if(isLoggedIn){\r\n      return  <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n           <Grid item xs={4}>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                          /*\r\n                            name='email'\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.email}\r\n                            onBlur={formik.handleBlur}\r\n\r\n                            */\r\n                            {...formik.getFieldProps('email')}\r\n\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? <div style={{color:'red'}}> {formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n\r\n                            {...formik.getFieldProps('password')}\r\n\r\n                        />\r\n                        { formik.touched.password && formik.errors.password ? <div style={{color:'red'}}> {formik.errors.password}</div> : null}\r\n\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={\r\n                                <Checkbox\r\n                                checked={formik.values.rememberMe}\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                            />}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n\r\n}\r\n",["149","150"],"C:\\Project\\TodoList\\src\\api\\todolists-api.ts",[],"C:\\Project\\TodoList\\src\\app\\app-reducer.ts",["151"],"C:\\Project\\TodoList\\src\\features\\Login\\auth-reducer.ts",[],"C:\\Project\\TodoList\\src\\stories\\Page.stories.tsx",[],["152","153"],"C:\\Project\\TodoList\\src\\stories\\AddItemForm.stories.tsx",[],"C:\\Project\\TodoList\\src\\stories\\Header.stories.tsx",[],"C:\\Project\\TodoList\\src\\stories\\Header.tsx",[],"C:\\Project\\TodoList\\src\\utils\\error-utils.ts",[],"C:\\Project\\TodoList\\src\\stories\\Button.stories.tsx",[],"C:\\Project\\TodoList\\src\\stories\\Task.stories.tsx",[],"C:\\Project\\TodoList\\src\\stories\\todolists-api.stories.tsx",["154","155"],"C:\\Project\\TodoList\\src\\stories\\Button.tsx",[],"C:\\Project\\TodoList\\src\\stories\\decorators\\ReduxStoreProviderDecorator.tsx",[],"C:\\Project\\TodoList\\src\\stories\\EditableSpan.stories.tsx",[],"C:\\Project\\TodoList\\src\\stories\\AppWithRedux.stories.tsx",["156"],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":33,"column":8,"nodeType":"163","endLine":33,"endColumn":10,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":10,"column":45,"nodeType":"167","messageId":"168","endLine":10,"endColumn":47},{"ruleId":"169","severity":1,"message":"170","line":5,"column":9,"nodeType":"171","messageId":"172","endLine":5,"endColumn":22},{"ruleId":"165","severity":1,"message":"166","line":13,"column":94,"nodeType":"167","messageId":"168","endLine":13,"endColumn":96},{"ruleId":"161","severity":1,"message":"173","line":35,"column":8,"nodeType":"163","endLine":35,"endColumn":10,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"175","line":39,"column":8,"nodeType":"163","endLine":39,"endColumn":42,"suggestions":"176"},{"ruleId":"161","severity":1,"message":"175","line":46,"column":8,"nodeType":"163","endLine":46,"endColumn":54,"suggestions":"177"},{"ruleId":"161","severity":1,"message":"175","line":48,"column":95,"nodeType":"163","endLine":48,"endColumn":134,"suggestions":"178"},{"ruleId":"161","severity":1,"message":"175","line":49,"column":101,"nodeType":"163","endLine":49,"endColumn":140,"suggestions":"179"},{"ruleId":"161","severity":1,"message":"175","line":50,"column":107,"nodeType":"163","endLine":50,"endColumn":146,"suggestions":"180"},{"ruleId":"169","severity":1,"message":"181","line":6,"column":9,"nodeType":"171","messageId":"172","endLine":6,"endColumn":26},{"ruleId":"161","severity":1,"message":"182","line":37,"column":8,"nodeType":"163","endLine":37,"endColumn":10,"suggestions":"183"},{"ruleId":"161","severity":1,"message":"184","line":42,"column":8,"nodeType":"163","endLine":42,"endColumn":10,"suggestions":"185"},{"ruleId":"161","severity":1,"message":"184","line":47,"column":8,"nodeType":"163","endLine":47,"endColumn":10,"suggestions":"186"},{"ruleId":"161","severity":1,"message":"184","line":52,"column":8,"nodeType":"163","endLine":52,"endColumn":10,"suggestions":"187"},{"ruleId":"161","severity":1,"message":"184","line":57,"column":8,"nodeType":"163","endLine":57,"endColumn":10,"suggestions":"188"},{"ruleId":"161","severity":1,"message":"184","line":62,"column":8,"nodeType":"163","endLine":62,"endColumn":10,"suggestions":"189"},{"ruleId":"161","severity":1,"message":"184","line":67,"column":8,"nodeType":"163","endLine":67,"endColumn":10,"suggestions":"190"},{"ruleId":"161","severity":1,"message":"184","line":72,"column":8,"nodeType":"163","endLine":72,"endColumn":10,"suggestions":"191"},{"ruleId":"161","severity":1,"message":"175","line":15,"column":97,"nodeType":"163","endLine":15,"endColumn":130,"suggestions":"192"},{"ruleId":"161","severity":1,"message":"175","line":20,"column":8,"nodeType":"163","endLine":20,"endColumn":41,"suggestions":"193"},{"ruleId":"161","severity":1,"message":"175","line":24,"column":8,"nodeType":"163","endLine":24,"endColumn":41,"suggestions":"194"},{"ruleId":"169","severity":1,"message":"195","line":2,"column":9,"nodeType":"171","messageId":"172","endLine":2,"endColumn":12},{"ruleId":"169","severity":1,"message":"196","line":2,"column":14,"nodeType":"171","messageId":"172","endLine":2,"endColumn":20},{"ruleId":"169","severity":1,"message":"197","line":2,"column":22,"nodeType":"171","messageId":"172","endLine":2,"endColumn":33},{"ruleId":"198","severity":1,"message":"199","line":60,"column":32,"nodeType":"200","endLine":60,"endColumn":49},{"ruleId":"157","replacedBy":"201"},{"ruleId":"159","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":47,"column":13,"nodeType":"171","messageId":"205","endLine":47,"endColumn":31},{"ruleId":"157","replacedBy":"201"},{"ruleId":"159","replacedBy":"202"},{"ruleId":"169","severity":1,"message":"206","line":137,"column":23,"nodeType":"171","messageId":"172","endLine":137,"endColumn":35},{"ruleId":"169","severity":1,"message":"207","line":138,"column":22,"nodeType":"171","messageId":"172","endLine":138,"endColumn":33},{"ruleId":"169","severity":1,"message":"208","line":4,"column":9,"nodeType":"171","messageId":"172","endLine":4,"endColumn":36},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["211"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'setAppErrorAC' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["212"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["213"],["214"],["215"],["216"],["217"],"'RequestStatusType' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["218"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["219"],["220"],["221"],["222"],["223"],["224"],["225"],["226"],["227"],["228"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["209"],["210"],"@typescript-eslint/no-redeclare","'setIsInitializedAC' is already defined.","redeclared","'setStartDate' is assigned a value but never used.","'setDeadline' is assigned a value but never used.","'ReduxStoreProviderDecorator' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"233","fix":"235"},{"desc":"233","fix":"236"},{"desc":"233","fix":"237"},{"desc":"233","fix":"238"},{"desc":"239","fix":"240"},{"desc":"229","fix":"241"},{"desc":"229","fix":"242"},{"desc":"229","fix":"243"},{"desc":"229","fix":"244"},{"desc":"229","fix":"245"},{"desc":"229","fix":"246"},{"desc":"229","fix":"247"},{"desc":"233","fix":"248"},{"desc":"233","fix":"249"},{"desc":"233","fix":"250"},"Update the dependencies array to be: [dispatch]",{"range":"251","text":"252"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"253","text":"254"},"Update the dependencies array to be: [props]",{"range":"255","text":"256"},{"range":"257","text":"256"},{"range":"258","text":"256"},{"range":"259","text":"256"},{"range":"260","text":"256"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"261","text":"262"},{"range":"263","text":"252"},{"range":"264","text":"252"},{"range":"265","text":"252"},{"range":"266","text":"252"},{"range":"267","text":"252"},{"range":"268","text":"252"},{"range":"269","text":"252"},{"range":"270","text":"256"},{"range":"271","text":"256"},{"range":"272","text":"256"},[1023,1025],"[dispatch]",[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1319,1321],"[demo, dispatch, isLoggedIn]",[1490,1492],[1661,1663],[1866,1868],[2079,2081],[2280,2282],[2427,2429],[2606,2608],[765,798],[1071,1104],[1261,1294]]